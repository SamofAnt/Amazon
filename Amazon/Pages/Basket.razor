@page "/Basket"

@using Amazon.Data.Interfaces
@using Amazon.Data.Model
@using Amazon.Data
@using System.Globalization

<h3>Корзина</h3>

@inject ICatalog Catalog
@inject IBasket ShoppingСart
@inject IToastService toastService

 @if (ShoppingСart.ItemsCount == 0)
    {
        <p>В корзине ничего нет</p>
    }
 else
 {
     <div class="CartContainer">
         <div class="Header">
             <h5 class="removeAll" @onclick="ClearBasket">Удалить все</h5>
         </div>
         @foreach (var product in _products)
         {
             <div class="Cart-Items">
                 <div class="image-box">
                     <img src=@product.Key.Image/>
                 </div>
                 <div class="about">
                     <h1 class="title">@product.Key.Name</h1>
                 </div>
                 <div class="counter">
                     <div class="btn" @onclick="() => AddProduct(product.Key)">+</div>
                     <div class="count">@product.Value</div>
                     <div class="btn" @onclick="() => RemoveProduct(product.Key)">-</div>
                 </div>
                 <div class="prices">
                     <div class="amount">@product.Key.Price.ToString("###,###,###", new NumberFormatInfo() {NumberGroupSeparator = " ", NumberDecimalSeparator = ", "}) ₽</div>
                 </div>
                 <div class="remove" @onclick="() => RemoveProduct(product.Key)">
                     <span class="oi oi-x" style="color:darkgray"></span>
                 </div>
             </div>
         }
         <hr>
         <div class="checkout">
             <div class="total">
                 <div>
                     <div class="Subtotal">Всего</div>
                     <div class="items">@ShoppingСart.ItemsCount товаров</div>
                 </div>
                 <div class="total-amount">@ShoppingСart.TotalAmount.ToString("###,###,###", new NumberFormatInfo() {NumberGroupSeparator = " ", NumberDecimalSeparator = ", "}) ₽</div>
             </div>
             <button class="button" @onclick="Checkout">Оформить заказ</button></div>
     </div>
 }
@code {
    IReadOnlyDictionary<Product, int> _products = new Dictionary<Product, int>();

    protected override void OnInitialized()
    {
        _products = ShoppingСart.GetBasketProducts();
        base.OnInitialized();
    }
    private void RemoveProduct(Product product)
    {
        if(ShoppingСart.Remove(product))
            toastService.ShowSuccess($"{product.Name} успешно удален из корзины", "Удалено из корзины");
        else
            toastService.ShowError($"{product.Name} не удален из корзины", "Ошибка удаления");
    }

    private void Checkout()
    { 
        toastService.ShowSuccess( $"Заказ на {ShoppingСart.TotalAmount.ToString("###,###,###", new NumberFormatInfo() {NumberGroupSeparator = " ", NumberDecimalSeparator = ", "})} ₽ успешно оформлен", "Заказ оформлен");
    }
    private void AddProduct(Product product) => ShoppingСart.Add(product);

    private void ClearBasket() => ShoppingСart.Clear();
}